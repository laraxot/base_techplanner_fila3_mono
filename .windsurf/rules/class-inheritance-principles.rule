# Principi di Ereditarietà nelle Classi

## Regola Fondamentale: No Duplicate Declarations

Le classi che estendono altre classi **NON devono ridichiarare** interfacce, trait o metodi già presenti nella classe genitore, a meno che non ne modifichino il comportamento.

## Esempi Corretti vs Errati

### ❌ Errato: Duplicazione di Interfacce/Trait

```php
// Classe base
abstract class XotBasePage extends Page implements HasForms
{
    use InteractsWithForms;
    // ...
}

// Classe figlia - ERRATO
class SendSmsPage extends XotBasePage implements HasForms // ⚠️ Duplicato!
{
    use InteractsWithForms; // ⚠️ Duplicato!
    // ...
}
```

### ✅ Corretto: Nessuna Duplicazione

```php
// Classe base
abstract class XotBasePage extends Page implements HasForms
{
    use InteractsWithForms;
    // ...
}

// Classe figlia - CORRETTO
class SendSmsPage extends XotBasePage
{
    // Non ridichiarare interfacce o trait già definiti nella classe base
    // ...
}
```

## Motivazioni

1. **Principio DRY (Don't Repeat Yourself)**:
   - Evita duplicazione del codice
   - Riduce il rischio di incoerenze quando la classe base cambia
   - Migliora la leggibilità e la manutenibilità

2. **Chiarezza Contrattuale**:
   - Le implementazioni delle interfacce/trait sono già garantite dalla classe base
   - Rende più chiara la gerarchia delle classi

## Riferimenti
- [Modules/Notify/docs/CLASS_INHERITANCE_PRINCIPLES.md](file:///var/www/html//laravel/Modules/Notify/docs/CLASS_INHERITANCE_PRINCIPLES.md)
