# Regola: Gestione Corretta degli Enum Cast nei Modelli Laraxot

## Problema Identificato
- Errore "Cannot instantiate enum" durante serializzazione con toArray()
- Campo type nullable nel database ma cast a enum nel modello
- Creazione modelli senza impostazione esplicita del type

## Regola Obbligatoria
- SEMPRE impostare esplicitamente il valore dell'enum quando si creano modelli con STI
- SEMPRE gestire valori null negli accessor degli enum
- SEMPRE aggiungere boot methods per valori di default nei modelli figli

## Pattern Corretto per Actions

```php
public function execute(array $data): Doctor
{
    // FIX: Imposta esplicitamente il type per evitare errori enum
    $data['type'] = UserTypeEnum::DOCTOR->value;
    
    $doctor = Doctor::create($data);
    return $doctor;
}
```

## Pattern Corretto per Accessor Enum

```php
public function getTypeAttribute($value): ?UserTypeEnum
{
    if ($value instanceof UserTypeEnum) {
        return $value;
    }
    
    if (empty($value)) {
        // Logica basata sul tipo di modello figlio
        if ($this instanceof Doctor) {
            return UserTypeEnum::DOCTOR;
        }
        return UserTypeEnum::default();
    }
    
    return UserTypeEnum::tryFrom($value) ?? UserTypeEnum::default();
}
```

## Pattern Corretto per Boot Method

```php
protected static function boot(): void
{
    parent::boot();
    
    static::creating(function ($doctor) {
        if (empty($doctor->type)) {
            $doctor->type = UserTypeEnum::DOCTOR;
        }
    });
}
```

## Motivazione
- Prevenire errori di serializzazione enum
- Garantire coerenza nei valori STI
- Migliorare robustezza del codice

## Anti-pattern da Evitare
- Non impostare type durante la creazione dei modelli
- Assumere che il cast gestisca automaticamente i valori null
- Non gestire i casi edge negli accessor

## Collegamenti
- [SaluteOra/docs/usertypeenum-serialization-fix.md](../../laravel/Modules/SaluteOra/docs/usertypeenum-serialization-fix.md)

*Ultimo aggiornamento: gennaio 2025*