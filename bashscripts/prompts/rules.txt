# Regole del Progetto 

## Documentazione
Analizza l'intero contenuto della cartella Modules come un unico insieme coerente. Ogni modulo nella cartella Modules è indipendente, con proprio composer.json da cui ricavare namespace, autoload e struttura. Le classi da registrare si trovano nella rispettiva cartella app, ma il namespace corretto è Modules<nome>\ e non Modules<nome>\app\. Ogni modulo ha la propria cartella docs che contiene la documentazione tecnica approfondita: quella è la tua memoria. La cartella docs nella root del progetto non è documentazione, ma un indice con collegamenti bidirezionali che ti guida a dove leggere, studiare, aggiornare e documentare correttamente la logica e le scelte di progetto. Inoltre può contenere la descrizione generale del progetto con roadmap, epiche, milestone, stime, politica, filosofia, zen e religione. Non ci devono essere documentazioni generali nella cartella docs della root: la documentazione va organizzata per moduli secondo queste regole: documentazione generica nella cartella docs del modulo Xot, documentazione specifica del progetto nella cartella docs della root del progetto, documentazione del frontend nella cartella docs del modulo Cms, documentazione dei componenti UI nella cartella docs del modulo UI, documentazione utenti e permessi nella cartella docs del modulo User, documentazione pazienti nella cartella docs del modulo Patient, documentazione dental nella cartella docs del modulo Dental, documentazione multi-tenant nella cartella docs del modulo Tenant, documentazione traduzioni nella cartella docs del modulo Lang, documentazione media nella cartella docs del modulo Media, documentazione notifiche nella cartella docs del modulo Notify, documentazione report nella cartella docs del modulo Reporting, documentazione gdpr nella cartella docs del modulo Gdpr, documentazione jobs nella cartella docs del modulo Job, documentazione grafici nella cartella docs del modulo Chart. Nella cartella docs della root del progetto ci devono essere solo i collegamenti bidirezionali alle documentazioni verso i moduli. Devi verificare sempre se le cartelle docs dei moduli hanno quello che ti serve e se sono ben collegate con collegamenti bidirezionali alla cartella docs della root e tra i moduli stessi. La documentazione va riscritta in modo efficace ed essenziale, concentrandosi sul perché e sul cosa, evitando i dettagli implementativi. Se ti viene corretta una cosa, devi sempre aggiornare prima la documentazione del modulo più adatto e poi aggiungere il collegamento nella root. Devi analizzare anche la documentazione presente nella cartella docs della root e valutare se alcuni documenti vanno spostati nella documentazione di un modulo più adeguato, aggiornando poi i collegamenti bidirezionali coerentemente. La documentazione generica va sempre collocata nella cartella docs del modulo Xot. Se trovi pezzi di documentazione generica all'interno della cartella docs della root, questi vanno spostati nella cartella docs del modulo Xot e nella root devono essere lasciati solo i collegamenti bidirezionali ai documenti spostati. Le funzioni getTableColumns, getTableActions e getTableBulkActions devono restituire array con chiavi stringa. Se getTableActions restituisce solo ViewAction, EditAction e DeleteAction va rimosso del tutto, altrimenti deve includere ...parent::getTableActions(). Se getTableBulkActions restituisce solo DeleteBulkAction va rimosso, altrimenti deve includere ...parent::getTableBulkActions(). Non usare mai ->label('') perché le label sono gestite solo tramite file di traduzione nei moduli con LangServiceProvider. Se una funzionalità chiama -><nome>($metatag->get<Nome>()) e manca il metodo get<Nome>, allora documenta perché serve e poi implementalo coerentemente all'interno del modulo corretto. Se devi creare uno script shell devi usare la cartella bashscripts più vicina e non devi mai creare nuove cartelle bashscripts, ma usare solo quelle già esistenti. Procedi nell'ordine che ritieni più efficace senza mai fermarti, mantenendo coerenza architetturale e senza rompere funzionalità esistenti, aggiornando sempre la documentazione locale e i collegamenti bidirezionali nella root e tra i moduli. Devi capire e documentare anche lo scopo specifico di ogni modulo per spostare la documentazione nel modulo giusto e poi creare/aggiornare i files coi collegamenti bidirezionali. Procedi sempre e scegli tu ordine e priorità senza interruzioni. Regola fondamentale: i prompt condivisi (come quelli in bashscripts/prompts) devono essere una singola stringa continua, senza formattazione e senza a capo. Questa regola va documentata nella docs del modulo Xot, gli altri moduli devono avere solo il link a questa regola.
