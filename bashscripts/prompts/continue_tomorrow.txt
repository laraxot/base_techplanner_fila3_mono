- Configurazioni per tenant - Isolamento dati - Directory: laravel/Modules/Tenant ### 4. Notify - Sistema di notifiche - Template e-mail - Gestione canali - Directory: laravel/Modules/Notify ### 5. Patient - Gestione pazienti - Cartelle cliniche - Appuntamenti - Directory: laravel/Modules/Patient ## Regole Fondamentali (Per TUTTI i Moduli) ### 1. Modelli - ❌ MAI estendere Model direttamente - ✅ Estendere BaseModel del proprio modulo - BaseModel deve essere nello stesso namespace dei modelli - Usare casts() invece di  per ereditare configurazioni ### 2. Resources Filament - ❌ MAI estendere classi Filament direttamente - ✅ Estendere classi XotBase* corrispondenti - Implementare getFormSchema() invece di form() - Implementare getTableColumns() invece di table() ### 3. Service Providers - ❌ MAI estendere ServiceProvider direttamente - ✅ Estendere XotBaseServiceProvider - Proprietà  DEVE essere public - Non reimplementare funzionalità di XotBaseServiceProvider ### 4. Traduzioni - Gestite tramite LangServiceProvider - Struttura: 'field' => ['label' => 'Label', 'placeholder' => '...'] - ❌ MAI usare ->label() direttamente nei form - File di traduzione per ogni modulo ### 5. Documentazione - Ogni modulo DEVE avere la sua cartella docs/ - Collegamenti bidirezionali tra docs - Documentare OGNI modifica importante - Best practices e anti-patterns per modulo ### 6. Namespace - Modules\{ModuleName} per ogni modulo - Models nello stesso namespace del BaseModel - Filament\Resources in namespace dedicato - Providers in namespace dedicato ## Pattern Comuni ### 1. Ereditarietà XotBaseModel -> ModuleBaseModel -> ConcreteModel XotBaseResource -> ConcreteResource XotBaseServiceProvider -> ModuleServiceProvider ### 2. Directory Structure Modules/ ModuleName/ app/ Models/ BaseModel.php Filament/ Resources/ Providers/ docs/ config/ resources/ lang/ routes/ ### 3. Configurazione - config/ per ogni modulo - Pubblicabile via ServiceProvider - Override per tenant supportato - Documentazione in docs/ ## Modulo Notify - Focus Attuale ### Contesto Attuale - Modulo: Notify - Namespace Base: Modules\Notify - Directory Base: laravel/Modules/Notify ### Stato Attuale - NotificationTemplate estende correttamente BaseModel - Documentazione aggiornata in docs/models.md - Implementata struttura corretta per form e table - GrapesJS in fase di integrazione ### Gerarchia di Ereditarietà Illuminate\Database\Eloquent\Model └── Modules\Xot\Models\XotBaseModel └── Modules\Notify\Models\BaseModel └── Modules\Notify\Models\NotificationTemplate ### File da Controllare 1. /laravel/Modules/Notify/app/Models/BaseModel.php 2. /laravel/Modules/Notify/app/Models/NotificationTemplate.php 3. /laravel/Modules/Notify/docs/models.md 4. /docs/regole/modelli-eloquent.md 5. /docs/regole/MEMORY.md ### Checklist per Nuovi Modelli - [ ] Verificare esistenza BaseModel nel modulo - [ ] Controllare funzionalità ereditate - [ ] Non duplicare configurazioni - [ ] Estendere BaseModel corretto - [ ] Importare dal namespace corretto ### TODO - [ ] Completare integrazione GrapesJS - [ ] Verificare tutte le estensioni nel modulo - [ ] Aggiornare documentazione per nuove funzionalità - [ ] Implementare test per template compilation ## Note Importanti - Mantenere coerenza tra moduli - Seguire pattern stabiliti - Documentare OGNI deviazione - Aggiornare questo prompt per nuovi pattern - STUDIARE la documentazione prima di ogni modifica - Mantenere il codice robusto, tipizzato e conforme a PSR-12 ## Collegamenti Chiave - /docs/architecture.md: Architettura globale - /docs/modules.md: Gestione moduli - /docs/patterns.md: Pattern comuni - Modules/*/docs/: Documentazione per modulo - [Architettura Modelli](../../docs/architecture/models.md) - [Struttura Moduli](../../docs/architecture/modules.md) - [BaseModel Notify](../../laravel/Modules/Notify/docs/base-model.md) - [BaseModel Xot](../../laravel/Modules/Xot/docs/base-model.md) ## Prossimi Passi 1. Verificare tutti i modelli esistenti nel modulo Notify 2. Correggere eventuali estensioni errate 3. Aggiornare la documentazione 4. Implementare test per verificare il corretto funzionamento 5. Controllare la coerenza con altri moduli ## TODO Globale - [ ] Verificare tutte le estensioni in tutti i moduli - [ ] Completare documentazione per ogni modulo - [ ] Standardizzare gestione traduzioni - [ ] Implementare test per funzionalità core - [ ] Aggiornare docs con nuovi pattern - [ ] Verificare coerenza namespace
