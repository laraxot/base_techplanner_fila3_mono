{"totals":{"errors":0,"file_errors":16},"files":{"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Export/ExportXlsByCollection.php":{"errors":1,"messages":[{"message":"Parameter #3 $fields of class Modules\\Xot\\Exports\\CollectionExport constructor expects array<int, string>, array|null given.","line":25,"ignorable":true,"identifier":"argument.type"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Export/ExportXlsByLazyCollection.php":{"errors":1,"messages":[{"message":"Parameter #3 $fields of class Modules\\Xot\\Exports\\LazyCollectionExport constructor expects array<int, string>, array|null given.","line":23,"ignorable":true,"identifier":"argument.type"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Export/ExportXlsByQuery.php":{"errors":1,"messages":[{"message":"Parameter #3 $fields of class Modules\\Xot\\Exports\\QueryExport constructor expects array<int, string>, array|null given.","line":25,"ignorable":true,"identifier":"argument.type"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Import/ImportCsvAction.php":{"errors":2,"messages":[{"message":"Function ini_set is unsafe to use. It can return FALSE instead of throwing an exception. Please add 'use function Safe\\ini_set;' at the beginning of the file to use the variant provided by the 'thecodingmachine/safe' library.","line":32,"ignorable":true,"identifier":"theCodingMachineSafe.class"},{"message":"Function ini_set is unsafe to use. It can return FALSE instead of throwing an exception. Please add 'use function Safe\\ini_set;' at the beginning of the file to use the variant provided by the 'thecodingmachine/safe' library.","line":33,"ignorable":true,"identifier":"theCodingMachineSafe.class"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Model/GetSchemaManagerByModelClassAction.php":{"errors":1,"messages":[{"message":"Call to an undefined method Illuminate\\Database\\Connection::getDoctrineSchemaManager().","line":21,"ignorable":true,"identifier":"method.notFound"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Model/Store/MorphToManyAction.php":{"errors":2,"messages":[{"message":"Parameter #1 $array of static method Illuminate\\Support\\Arr::isAssoc() expects array, mixed given.","line":33,"ignorable":true,"identifier":"argument.type"},{"message":"Parameter #1 $ids of method Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany<Illuminate\\Database\\Eloquent\\Model,Illuminate\\Database\\Eloquent\\Model>::sync() expects array|Illuminate\\Database\\Eloquent\\Model|Illuminate\\Support\\Collection, mixed given.","line":34,"ignorable":true,"identifier":"argument.type"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Model/Update/BelongsToAction.php":{"errors":1,"messages":[{"message":"Offset 0 does not exist on non-empty-array<string, mixed>.","line":35,"ignorable":true,"identifier":"offsetAccess.notFound"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Model/Update/BelongsToManyAction.php":{"errors":1,"messages":[{"message":"Call to function is_iterable() with non-empty-list will always evaluate to true.","line":64,"ignorable":true,"identifier":"function.alreadyNarrowedType"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Model/Update/CustomRelationAction.php":{"errors":2,"messages":[{"message":"Parameter #1 $array of function array_keys expects array, mixed given.","line":28,"ignorable":true,"identifier":"argument.type"},{"message":"Parameter #2 $data of method Modules\\Xot\\Actions\\Model\\UpdateAction::execute() expects array<string, mixed>, mixed given.","line":29,"ignorable":true,"identifier":"argument.type"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Model/Update/MorphManyAction.php":{"errors":2,"messages":[{"message":"Parameter #1 $array of function array_keys expects array, mixed given.","line":34,"ignorable":true,"identifier":"argument.type"},{"message":"Parameter #2 $data of method Modules\\Xot\\Actions\\Model\\UpdateAction::execute() expects array<string, mixed>, mixed given.","line":40,"ignorable":true,"identifier":"argument.type"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Actions/Model/Update/MorphToManyAction.php":{"errors":1,"messages":[{"message":"Instanceof between Illuminate\\Database\\Eloquent\\Relations\\MorphToMany and Illuminate\\Database\\Eloquent\\Relations\\MorphToMany will always evaluate to true.","line":52,"ignorable":true,"identifier":"instanceof.alwaysTrue"}]},"/mnt/nas02/var/www/_bases/base_techplanner_fila3/laravel/Modules/Xot/app/Filament/Actions/Header/FakeSeederHeaderAction.php":{"errors":1,"messages":[{"message":"Parameter #2 $qty of method Modules\\Xot\\Actions\\ModelClass\\FakeSeederAction::execute() expects int<1, max>, int given.","line":46,"ignorable":true,"identifier":"argument.type"}]}},"errors":[]}