---
description: Regole per l'analisi statica con PHPStan in <nome progetto>
globs: ["**/*.php"]
alwaysApply: true
---

# Regole PHPStan per Laraxot <nome progetto>

## Esecuzione Corretta

- Eseguire sempre dalla directory Laravel root:
  ```bash
  cd /var/www/html/<nome progetto>/laravel
  ./vendor/bin/phpstan analyze [target] --level=9
  ```

- Utilizzare `--memory-limit=2G` per moduli grandi
- Analizzare moduli individualmente se l'analisi completa fallisce
- Livello minimo: 9 (preferibile 10)

## Tipizzazione Rigorosa

- Usare `declare(strict_types=1);` in ogni file PHP
- Evitare `mixed` se possibile
- Specificare sempre tipi di ritorno espliciti
- Specificare sempre tipi di parametri
- Usare tipi generici correttamente

```php
<?php

declare(strict_types=1);

namespace Modules\Performance\Models;

/**
 * @property int $id
 * @property string $descrizione
 * @property int|null $anno
 * @property Carbon|null $created_at
 * @property Carbon|null $updated_at
 * @property-read Collection<Valutato> $valutati
 */
class Organizzativa extends BaseModel
{
    /**
     * Get valutati for this organizzativa.
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany<Valutato>
     */
    public function valutati(): \Illuminate\Database\Eloquent\Relations\HasMany
    {
        return $this->hasMany(Valutato::class);
    }
}
```

## Proprietà dei Modelli

- `$fillable` sempre `protected` e annotata con `/** @var list<string> */`
- `$hidden` sempre `protected` e annotata con `/** @var list<string> */`
- `$dates` sempre `protected` e annotata con `/** @var list<string> */`
- `$with` sempre `protected` e annotata con `/** @var list<string> */`
- No `$casts`, usare metodo `casts()`

## Gestione Valori Mixed (PHPStan livello 9+)

```php
// ❌ ERRATO
$result = $data['key'];

// ✅ CORRETTO
if (is_array($data) && isset($data['key'])) {
    $result = $data['key'];
}

// Per la conversione in stringhe:
// ❌ ERRATO
$message = "Value: {$value}";

// ✅ CORRETTO
$message = "Value: " . (is_scalar($value) ? (string) $value : '');
```

## Funzioni Sicure

- Usare le funzioni sicure di `thecodingmachine/safe` invece delle equivalenti PHP standard:

```php
// ❌ ERRATO
$contents = file_get_contents($path);

// ✅ CORRETTO
$contents = \Safe\file_get_contents($path);
```

## Documentazione PHPDoc Completa

- Annotare tutte le proprietà del modello:
  ```php
  /**
   * @property int $id
   * @property string $nome
   * @property Carbon|null $created_at
   * @property Carbon|null $updated_at
   * @property-read Collection<Permesso> $permessi
   */
  ```

- Annotare correttamente i metodi:
  ```php
  /**
   * Descrizione del metodo.
   *
   * @param string $param1 Descrizione parametro
   * @param int|null $param2 Descrizione parametro
   * @return array<string, mixed> Descrizione ritorno
   */
  public function myMethod(string $param1, ?int $param2): array
  ```

## Errori Comuni e Soluzioni

1. **Accesso a valori mixed**
   - Sempre verificare il tipo prima di accedere a proprietà o metodi

2. **Operazioni binarie con tipi mixed**
   - Convertire esplicitamente i valori prima delle operazioni

3. **Cast di tipi mixed**
   - Verificare il tipo prima del cast

4. **Parametri di funzione con tipo errato**
   - Validare input all'inizio del metodo

5. **Errori nei tipi di ritorno**
   - Garantire che il valore restituito corrisponda al tipo dichiarato

6. **Errori nei tipi generici**
   - Specificare tutti i tipi generici nelle annotazioni

## Workflow Analisi

1. **Pre-Analisi**:
   - Revisione docs più vicina
   - Verifica docs root
   - Revisione regole in .cursor/rules/

2. **Durante Analisi**:
   - Fix problemi modulo per modulo
   - Documentazione pattern in docs/
   - Aggiornamento regole globali quando applicabile

3. **Post-Analisi**:
   - Aggiornamento documentazione
   - Cross-reference regole correlate
   - Verifica coerenza tra moduli

## Ignorare Errori (usare con parsimonia)

```php
/** @phpstan-ignore-next-line */
$value = $data['key'];

// Oppure
$value = $data['key']; /** @phpstan-ignore-line */
```

## Backlink e Riferimenti

- [Modules/Xot/docs/PHPSTAN-LEVEL9-GUIDE.md](mdc:../../laravel/Modules/Xot/docs/PHPSTAN-LEVEL9-GUIDE.md)
- [docs/PHPSTAN_FIXES.md](mdc:../../docs/PHPSTAN_FIXES.md)
- [Modules/Performance/docs/phpstan_fixes.md](mdc:../../laravel/Modules/Performance/docs/phpstan_fixes.md)

*Ultimo aggiornamento: maggio 2025*
