---
trigger: manual
description:
globs:
---
# Best Practices Sicurezza

## Autenticazione

1. **Gestione Password**
   - Utilizzare hashing sicuro (bcrypt)
   - Implementare policy password forti
   - Forzare cambio password periodico
   - Implementare lockout dopo tentativi falliti

2. **Sessione**
   - Configurare timeout sessione appropriati
   - Implementare rigenerazione ID sessione
   - Utilizzare cookie sicuri
   - Implementare logout automatico

3. **2FA/MFA**
   - Implementare autenticazione a due fattori
   - Supportare autenticatori TOTP
   - Gestire backup codes
   - Forzare 2FA per ruoli sensibili

## Autorizzazione

1. **Policies**
   - Implementare policies per ogni risorsa
   - Verificare autorizzazioni a livello controller
   - Utilizzare middleware di autorizzazione
   - Documentare regole di accesso

2. **Ruoli e Permessi**
   - Implementare RBAC (Role-Based Access Control)
   - Definire permessi granulari
   - Verificare permessi a livello API
   - Auditare accessi

## Input Validation

1. **Validazione Dati**
   - Validare tutti gli input
   - Sanitizzare dati prima del salvataggio
   - Utilizzare form requests
   - Implementare validazione lato server

2. **XSS Prevention**
   - Escape output HTML
   - Utilizzare CSP (Content Security Policy)
   - Sanitizzare input utente
   - Implementare CSRF protection

## Database Security

1. **Query Security**
   - Utilizzare query builder o Eloquent
   - Evitare raw queries
   - Implementare prepared statements
   - Sanitizzare input SQL

2. **Data Encryption**
   - Crittografare dati sensibili
   - Utilizzare encryption at rest
   - Gestire chiavi di crittografia
   - Implementare key rotation

## API Security

1. **API Authentication**
   - Utilizzare token sicuri
   - Implementare rate limiting
   - Validare API keys
   - Monitorare uso API

2. **API Authorization**
   - Verificare scopes OAuth
   - Implementare API policies
   - Loggare accessi API
   - Auditare chiamate API

## File Security

1. **Upload Files**
   - Validare tipi file
   - Scansionare malware
   - Limitare dimensioni
   - Sanitizzare nomi file

2. **File Storage**
   - Utilizzare storage sicuro
   - Implementare access control
   - Crittografare file sensibili
   - Backup regolari

## Logging e Monitoring

1. **Security Logging**
   - Loggare eventi di sicurezza
   - Monitorare tentativi di accesso
   - Tracciare modifiche critiche
   - Implementare alerting

2. **Audit Trail**
   - Tracciare modifiche dati
   - Loggare accessi utente
   - Mantenere history changes
   - Implementare reporting

## Error Handling

1. **Error Management**
   - Non esporre errori dettagliati
   - Implementare custom error pages
   - Loggare errori appropriatamente
   - Monitorare errori critici

2. **Exception Handling**
   - Gestire eccezioni in modo sicuro
   - Non esporre stack traces
   - Implementare fallback
   - Notificare errori critici

## Infrastructure Security

1. **Server Security**
   - Mantenere server aggiornati
   - Configurare firewall
   - Implementare SSL/TLS
   - Monitorare vulnerabilità

2. **Environment**
   - Proteggere file .env
   - Gestire secrets
   - Isolare ambienti
   - Implementare backup

## Compliance

1. **Data Protection**
   - Implementare GDPR compliance
   - Gestire consensi
   - Implementare data retention
   - Gestire data portability

2. **Audit**
   - Mantenere compliance docs
   - Implementare audit logs
   - Preparare report compliance
   - Gestire data breaches

## Best Practices Generali

1. **Security by Design**
   - Implementare security early
   - Fare security review
   - Testare vulnerabilità
   - Mantenere aggiornamenti

2. **Documentation**
   - Documentare security measures
   - Mantenere security docs
   - Aggiornare procedure
   - Formare team

3. **Incident Response**
   - Definire procedure
   - Preparare team
   - Testare response
   - Mantenere aggiornamenti
