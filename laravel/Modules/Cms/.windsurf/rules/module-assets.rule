# Regole per la Gestione degli Asset nei Moduli Laravel

## Helper Functions
- NON usare `module_asset()` direttamente
- Usare SEMPRE il facade `Module::asset()`
- Importare il facade: `use Nwidart\Modules\Facades\Module;`

## Anti-Pattern
❌ NON FARE:
```php
<script src="{{ module_asset('ModuleName', 'js/file.js') }}"></script>
```

✅ FARE:
```php
<script src="{{ Module::asset('ModuleName', 'js/file.js') }}"></script>
```

## Struttura Directory
```
modules/
  └── ModuleName/
      ├── resources/
      │   ├── assets/
      │   │   ├── js/
      │   │   ├── css/
      │   │   └── images/
      │   └── views/
      └── public/
          └── assets/
```

## Best Practices
1. **Pubblicazione Asset**:
   - Usare `php artisan module:publish-assets`
   - Configurare in `module.json`
   - Verificare i permessi

2. **Accesso Asset**:
   - Usare il facade Module
   - Verificare esistenza file
   - Gestire fallback

3. **Cache**:
   - Abilitare cache assets
   - Versioning automatico
   - Clear cache dopo deploy

## Troubleshooting
1. **Asset Non Trovati**:
   - Verificare percorso
   - Controllare pubblicazione
   - Verificare permessi

2. **Cache Issues**:
   - Clear cache
   - Riavviare server
   - Verificare symlink

## Note Importanti
- Usare SEMPRE il facade Module
- Mantenere struttura directory
- Documentare asset custom 