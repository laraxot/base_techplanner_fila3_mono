# Filament Best Practices for <nome progetto>

## Overview
Best practice generiche per l'utilizzo di Filament in progetti Laravel modulari. Nessun riferimento a nomi di progetto o brand.

# Filament Best Practices for <nome progetto>

## Overview
Best practice generiche per l'utilizzo di Filament in progetti Laravel modulari. Nessun riferimento a nomi di progetto o brand.

# Filament Best Practices for <nome progetto>

## Overview
Best practice generiche per l'utilizzo di Filament in progetti Laravel modulari. Nessun riferimento a nomi di progetto o brand.

## Descrizione
Best practice generiche per l'utilizzo di Filament in progetti Laravel modulari. Nessun riferimento a nomi di progetto o brand.

## Come si usa
- Applicare queste regole in qualsiasi progetto che utilizza Filament
- Adatte a moduli riutilizzabili e architetture multi-progetto

## Regole principali
- NON estendere mai direttamente le classi di Filament: creare sempre wrapper personalizzati
- Utilizzare traits per funzionalità riutilizzabili
- Seguire il pattern di composizione invece dell'ereditarietà
- Mantenere la compatibilità con gli aggiornamenti di Filament
- Centralizzare le configurazioni comuni nelle classi base
- Non inserire proprietà statiche custom nei resource (es. $navigationIcon, $navigationGroup, $translationPrefix)
- Non usare ->label() direttamente nei form: usare sempre i file di traduzione

## Resources

When creating Filament resources, adhere to the following conventions to maintain consistency with the project's architecture:

```php
// ❌ DO NOT
use Filament\Resources\Resource;

class DoctorResource extends Resource
{
    public function form(Form $form)
    {
        return $form->schema([...]);
    }
}

// ✅ DO
use Modules\Xot\Filament\Resources\XotBaseResource;

class DoctorResource extends XotBaseResource
{
    public function form(Form $form)
    {
        return $form->schema([...]);
    }
}
```

### Best Practices for Resources
1. **NEVER** extend `Filament\Resources\Resource` directly.
2. **ALWAYS** extend `Modules\Xot\Filament\Resources\XotBaseResource`.
3. Utilize the base implementations provided by Xot.
4. Maintain consistency with the rest of the system.
5. Leverage the default functionalities of `XotBaseResource`.

### What NOT to Implement in XotBaseResource

Avoid redefining properties or methods that are already managed by `XotBaseResource`:

```php
// ❌ DO NOT - These are already handled by XotBaseResource
class DoctorResource extends XotBaseResource
{
    // ❌ ERROR: Do not define these properties when extending XotBaseResource
    protected static ?string $navigationIcon = 'heroicon-o-user';  // NOT NECESSARY
    protected static ?string $navigationGroup = 'Gestione';        // NOT NECESSARY
    protected static ?int $navigationSort = 1;                     // NOT NECESSARY

    // ❌ ERROR: Use getListTableColumns() instead of getTableColumns()
    public static function getTableColumns(): array                // NOT NECESSARY
    {
        return [...];
    }

    public static function getRelations(): array                   // NOT NECESSARY
    {
        return [...];
    }

    public static function getPages(): array                       // NOT NECESSARY if using only index, create, edit
    {
        return [
            'index' => Pages\ListDoctors::route('/'),
            'create' => Pages\CreateDoctor::route('/create'),
            'edit' => Pages\EditDoctor::route('/{record}/edit'),
        ];
    }
}

// ✅ DO - Implement only module-specific elements
class DoctorResource extends XotBaseResource
{
    public function form(Form $form): Form
    {
        return $form->schema([
            // Module-specific schema
        ]);
    }

    // Implement getPages() ONLY if adding custom pages beyond index, create, edit
    public static function getPages(): array
    {
        return [
            'index' => Pages\ListDoctors::route('/'),
            'create' => Pages\CreateDoctor::route('/create'),
            'edit' => Pages\EditDoctor::route('/{record}/edit'),
            'custom' => Pages\CustomDoctor::route('/custom'),  // Only if a custom page is needed
        ];
    }
}
```

## Additional Guidelines
- Ensure that all Filament resources follow the project's coding standards (PSR-12).
- Use type hints and return type declarations for methods in Filament resources.
- Document custom methods or complex logic within Filament resources for clarity.

## Esempi
```php
// ❌ Anti-pattern
class MyResource extends \Filament\Resources\Resource {}

// ✅ Best practice
class MyResource extends \Modules\Xot\Filament\Resources\XotBaseResource {}
```

## Troubleshooting
- Se compare un errore di override di proprietà statiche, rimuovere la proprietà dal resource e centralizzare nella base
- Se le traduzioni non vengono applicate, controllare la struttura dei file lang e l'assenza di ->label() hardcoded

## Collegamenti
- [Filament Docs](https://filamentphp.com/docs)
- [Best practices moduli riutilizzabili](../module-documentation-neutrality.mdc)
- [Ereditarietà modelli](../model-inheritance-best-practices.mdc)

# Filament: Best Practices Trasversali

## Introduzione
Queste regole definiscono le best practice per l'uso di Filament in tutti i moduli.

## Regola
- Non estendere mai direttamente le classi Filament: usare wrapper custom (es. XotBaseResource, XotBaseWidget).
- Usare solo componenti nativi Filament (x-filament::icon, x-filament::button, ...).
- Tutte le label e i testi devono provenire dai file di traduzione.

## Esempio
```php
use Modules\Xot\Filament\Widgets\XotBaseWidget;
class LoginWidget extends XotBaseWidget { ... }
```

## Checklist
- [ ] Nessuna estensione diretta di classi Filament
- [ ] Solo componenti nativi
- [ ] Label e testi da file di traduzione

## Collegamenti correlati
- [Xot/filament-best-practices.md](../../laravel/Modules/Xot/docs/filament-best-practices.md)
- [Patient/FILAMENT_BEST_PRACTICES.md](../../laravel/Modules/Patient/docs/FILAMENT_BEST_PRACTICES.md)
- [Cms/filament-components.md](../../laravel/Modules/Cms/docs/filament-components.md)
- [filament-resources-guidelines.md](../../docs/filament-resources-guidelines.md)
- [README centrale](../../docs/README.md)
