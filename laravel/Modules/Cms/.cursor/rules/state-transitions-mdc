# State Transition Implementation Guide

## Required Pattern

```php
namespace Modules\{ModuleName}\States\{ModelName}\Transitions;

use Spatie\ModelStates\Transition;
use Illuminate\Database\Eloquent\Model;

class {FromState}To{ToState} extends Transition
{
    public function __construct(
        public Model $model,
        public ?string $message = ''
    ) {}

    public function handle(): Model
    {
        // Transition logic here
        return $this->model;
    }
}
```

## Key Points
- Always extend `Spatie\ModelStates\Transition`
- First parameter must be the model instance
- Second parameter is an optional message (default empty string)
- `handle()` must return the updated model

## File Structure
```
app/
  States/
    {ModelName}/
      Transitions/
        {FromState}To{ToState}.php
```

## Best Practices
- Keep transitions simple and focused
- Use dependency injection for services
- Log important state changes
- Document complex logic with PHPDoc
- Follow PSR-12 standards
- Always provide default values for optional parameters
- Test all transitions thoroughly

## Common Pitfalls
- Forgetting to return the model from handle()
- Not handling optional parameters correctly
- Complex business logic in transitions (should be in services)
- Missing type hints
- Incomplete error handling
