# Regole Critiche per Traduzioni Filament

## REGOLA ASSOLUTA: MAI usare ->label(), ->placeholder(), ->helperText()
- **VIETATO**: `->label(__('ui::pages.s3test.fields.to.label'))`
- **VIETATO**: `->placeholder(__('ui::pages.s3test.fields.to.placeholder'))`
- **VIETATO**: `->helperText(__('ui::pages.s3test.fields.to.helper_text'))`

## CORRETTO: Lasciare che il LangServiceProvider gestisca automaticamente
```php
// ✅ CORRETTO
Forms\Components\TextInput::make('to')
    ->email()
    ->required()

// ❌ ERRATO - MAI FARE
Forms\Components\TextInput::make('to')
    ->label(__('ui::pages.s3test.fields.to.label'))
    ->placeholder(__('ui::pages.s3test.fields.to.placeholder'))
    ->helperText(__('ui::pages.s3test.fields.to.helper_text'))
    ->email()
    ->required()
```

## Struttura File Traduzione Obbligatoria
```php
// Modules/UI/lang/it/pages.php
return [
    's3test' => [
        'fields' => [
            'to' => [
                'label' => 'Destinatario',
                'placeholder' => 'Inserisci l\'indirizzo email',
                'helper_text' => 'L\'email verrà inviata a questo indirizzo',
            ],
        ],
    ],
];
```

## Motivazione
- Il LangServiceProvider gestisce automaticamente le traduzioni
- Evita duplicazione di codice
- Mantiene coerenza in tutto il sistema
- Rispetta il principio DRY

## Checklist
- [ ] MAI usare ->label() nei form components
- [ ] MAI usare ->placeholder() nei form components  
- [ ] MAI usare ->helperText() nei form components
- [ ] SEMPRE strutturare file traduzione con label/placeholder/helper_text
- [ ] SEMPRE usare chiavi che corrispondono al nome del campo

## Errori Comuni da Evitare
```php
// ❌ ERRATO - Duplicazione
TextInput::make('email')
    ->label('Email')
    ->placeholder('Inserisci email')

// ✅ CORRETTO - Automatico
TextInput::make('email')
    ->email()
    ->required()
```

*Questa regola è CRITICA e va applicata SEMPRE*
