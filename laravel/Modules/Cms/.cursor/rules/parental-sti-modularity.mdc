---
description:
globs:
alwaysApply: false
---
# Regola: Modularità con Parental STI (Single Table Inheritance)

## Principio Fondamentale
Il modulo User DEVE rimanere generico e riutilizzabile. MAI creare dipendenze da moduli specifici del progetto.

## Regole Critiche

### 1. BaseUser (Modulo User Generico)
- ✅ SEMPRE usare `HasChildren` trait
- ✅ Definire `protected $childColumn = 'type'`
- ✅ Lasciare `protected $childTypes = []` vuoto per default
- ❌ MAI dipendenze da enum o classi specifiche del progetto

### 2. User del Modulo Specifico
- ✅ Estendere BaseUser
- ✅ Definire `$childTypes` specifici del progetto
- ✅ Implementare cast specifici (es. enum)
- ✅ Configurare connessione database specifica

### 3. Comandi Console Generici
- ✅ SEMPRE utilizzare reflection per ispezionare tipi disponibili
- ✅ Fornire fallback ragionevoli se nessun tipo configurato
- ✅ NON assumere enum o strutture specifiche
- ❌ MAI dipendenze dirette da moduli specifici

## Pattern Corretto per Comandi

```php
// ✅ CORRETTO - Comando generico
class ChangeTypeCommand extends Command
{
    private function getAvailableTypes($user): array
    {
        // Ispeziona modello corrente
        if (property_exists($user, 'childTypes') && !empty($user->childTypes)) {
            return $user->childTypes;
        }
        
        // Fallback base
        return ['admin' => 'Administrator', 'user' => 'Regular User'];
    }
}

// ❌ ERRATO - Dipendenza specifica
use Modules\SaluteOra\Enums\UserTypeEnum; // MAI fare questo nel modulo User
```

## Struttura Raccomandata

```
Modules/User/               # Generico e riutilizzabile
├── Models/BaseUser.php     # Trait HasChildren, $childTypes = []
├── Console/Commands/       # Comandi generici senza dipendenze
└── docs/                   # Documentazione architettura base

Modules/ProjectName/        # Specifico del progetto
├── Models/User.php         # Estende BaseUser, definisce $childTypes
├── Models/Admin.php        # HasParent trait
├── Models/Doctor.php       # HasParent trait
└── Enums/UserTypeEnum.php  # Enum specifico del progetto
```

## Errori Comuni da Evitare

1. **❌ Dipendenze inverse**: Modulo User che importa da moduli specifici
2. **❌ Enum hardcoded**: Uso di enum specifici in comandi generici
3. **❌ Cast nei BaseModel**: Cast specifici nel modello base generico
4. **❌ Configurazioni specifiche**: Logiche del dominio nel modulo User base

## Checklist di Validazione

- [ ] Il modulo User non ha import da moduli specifici del progetto
- [ ] I comandi console usano reflection per ispezionare tipi
- [ ] BaseUser ha $childTypes vuoto per default
- [ ] User specifico del progetto definisce i propri $childTypes
- [ ] Documentazione aggiornata per entrambi i livelli

## Link Documentazione

- [User/docs/parental_inheritance.md](../../laravel/Modules/User/docs/parental_inheritance.md)
- [Parental GitHub](https://github.com/tighten/parental)
- [Architettura Modulare](../../docs/module-architecture.md)

## Ultimo Aggiornamento
Dicembre 2024 - Correzione comando ChangeTypeCommand per compliance modularità

---
**Questa regola DEVE essere copiata identica in .windsurf/rules/**
