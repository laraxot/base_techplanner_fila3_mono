---
trigger: manual
description:
globs:
---
# Regole per l'Estensione di XotBaseResource (Filament)

## üö® VIOLAZIONI CRITICHE IDENTIFICATE

### Esempi di Violazioni Reali Trovate nel Progetto:

#### ‚ùå VIOLAZIONE GRAVE - NotificationTemplateResource.php
```php
class NotificationTemplateResource extends XotBaseResource
{
    // ‚ùå ERRORE: Propriet√† vietate dichiarate
    protected static ?string $navigationIcon = 'heroicon-o-bell';
    protected static ?string $navigationGroup = 'Sistema';
    protected static ?int $navigationSort = 48;

    // ‚ùå ERRORE: Override metodi gestiti da NavigationLabelTrait
    public static function getNavigationLabel(): string
    public static function getNavigationGroup(): string
    public static function getModelLabel(): string
}
```

#### ‚ùå VIOLAZIONE GRAVE - NotificationLogResource.test
```php
class NotificationLogResource extends XotBaseResource
{
    // ‚ùå ERRORE: Propriet√† vietate dichiarate
    protected static ?string $navigationIcon = 'heroicon-o-bell';
    protected static ?string $navigationGroup = 'Notifiche';
    protected static ?int $navigationSort = 100;

    // ‚ùå ERRORE: Override metodi gestiti da NavigationLabelTrait
    public static function getNavigationLabel(): string
    public static function getModelLabel(): string
    public static function getPluralModelLabel(): string
}
```

## Regola Fondamentale
**Se una classe estende `XotBaseResource`, NON deve mai dichiarare:**
- `protected static ?string $navigationIcon`
- `protected static ?string $navigationGroup`
- `protected static ?string $navigationLabel`
- `protected static ?int $navigationSort`
- `protected static ?string $translationPrefix`
- `public static function table(Table $table): Table`
- `public static function getListTableColumns(): array`
- `public static function getTableFilters(): array`
- `public static function getBulkActions(): array`
- `public static function getPages(): array` (se restituisce solo index,create,edit o index,create,edit,view)

## Override Metodi VIETATI
**NON sovrascrivere mai questi metodi** (gestiti da NavigationLabelTrait):
- `public static function getNavigationLabel(): string`
- `public static function getNavigationGroup(): string`
- `public static function getModelLabel(): string`
- `public static function getPluralModelLabel(): string`
- `public static function getNavigationIcon(): string`
- `public static function getNavigationSort(): ?int`

## Namespace Corretto
- **SEMPRE** utilizzare `Modules\<NomeModulo>\Filament\Resources`
- **MAI** utilizzare `Modules\<NomeModulo>\App\Filament\Resources`
- I file devono essere in `app/Filament/Resources/` ma il namespace NON include `app`

## Metodi Obbligatori che Restituiscono Array Associativo
I seguenti metodi devono SEMPRE restituire un array associativo con chiavi string:
- `getFormSchema(): array` - chiavi: sezioni del form
- `getTableActions(): array` - chiavi: nomi delle azioni
- `getTableColumns(): array` - chiavi: nomi delle colonne
- `getTableFilters(): array` - chiavi: nomi dei filtri
- `getTableBulkActions(): array` - chiavi: nomi delle azioni bulk

## Traduzioni e Configurazione Navigazione
- **MAI** utilizzare `->label()` sui componenti Filament
- Utilizzare sempre i file di traduzione in `Modules/<NomeModulo>/lang/<lingua>/`
- Il LangServiceProvider gestisce automaticamente le traduzioni
- La navigazione viene configurata tramite file di traduzione, NON tramite propriet√† statiche

### Configurazione Corretta Navigazione
```php
// File: Modules/Notify/lang/it/notification_template_resource.php
return [
    'getNavigationLabel' => 'Template Notifiche',
    'getNavigationGroup' => 'Sistema',
    'getNavigationIcon' => 'heroicon-o-bell',
    'getNavigationSort' => 48,
    'getModelLabel' => 'Template Notifica',
    'getPluralModelLabel' => 'Template Notifiche',
];
```

## Enum vs Array Options
- Se una select ha options che sono un array, convertire agli enum PHP 8.1+
- Utilizzare enum con `HasLabel`, `HasIcon`, `HasColor` quando appropriato

## Motivazione
- La gestione di navigationGroup/navigationLabel/navigationIcon √® centralizzata nella classe base o nei provider
- I metodi table(), getListTableColumns(), etc. sono gestiti tramite trait, macro o configurazione centralizzata
- Dichiarare questi elementi causa override indesiderati, perdita di automazione e incoerenza tra moduli
- I metodi che restituiscono array associativo permettono maggiore flessibilit√† e configurabilit√†

## ‚úÖ Esempio CORRETTO
```php
<?php

declare(strict_types=1);

namespace Modules\Notify\Filament\Resources;

use Modules\Xot\Filament\Resources\XotBaseResource;
use Modules\Notify\Models\NotificationTemplate;
use Filament\Forms\Components\Section;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Select;
use Modules\Notify\Enums\NotificationStatusEnum;

class NotificationTemplateResource extends XotBaseResource
{
    protected static ?string $model = NotificationTemplate::class;

    // ‚úÖ CORRETTO: Nessuna propriet√† di navigazione dichiarata
    // ‚úÖ CORRETTO: Nessun override di metodi NavigationLabelTrait

    public static function getFormSchema(): array
    {
        return [
            'basic_info' => Section::make()
                ->schema([
                    TextInput::make('name'), // ‚úÖ Traduzione automatica via LangServiceProvider
                    TextInput::make('subject'),
                ]),
            'content' => Section::make()
                ->schema([
                    TextInput::make('body'),
                    Select::make('status')
                        ->options(NotificationStatusEnum::class), // ‚úÖ Enum invece di array
                ]),
        ];
    }

    public static function getTableColumns(): array
    {
        return [
            'name' => TextColumn::make('name')->sortable(),
            'subject' => TextColumn::make('subject')->searchable(),
            'status' => TextColumn::make('status')->badge(),
        ];
    }
}
```

## Checklist Pre-Commit OBBLIGATORIA
- [ ] Se estendi XotBaseResource, NON dichiarare navigationGroup/navigationLabel/navigationIcon/navigationSort
- [ ] Se estendi XotBaseResource, NON dichiarare il metodo table()
- [ ] NON sovrascrivere metodi gestiti da NavigationLabelTrait
- [ ] Namespace corretto: `Modules\<Nome>\Filament\Resources` (senza `App`)
- [ ] File in `app/Filament/Resources/` ma namespace senza `app`
- [ ] Metodi restituiscono array associativo con chiavi string
- [ ] Nessun `->label()` sui componenti, solo traduzioni via file lang
- [ ] Array options convertiti in enum
- [ ] File di traduzione aggiornato per navigazione
- [ ] Aggiorna la documentazione tecnica e README
- [ ] `declare(strict_types=1);` presente all'inizio del file

## Errori Comuni
- Override accidentale di navigationGroup/navigationLabel/navigationIcon/navigationSort
- Override metodi NavigationLabelTrait
- Duplicazione del metodo table() tra risorse
- Incoerenza tra moduli per la navigazione Filament
- Namespace errato con `App` incluso
- Utilizzo di `->label()` invece delle traduzioni
- Array options invece di enum
- Mancanza di `declare(strict_types=1);`

## Filosofia e Zen
- **DRY (Don't Repeat Yourself)**: Centralizzazione evita duplicazioni
- **KISS (Keep It Simple, Stupid)**: Configurazione semplice e uniforme
- **Coerenza**: Tutti i moduli seguono le stesse regole
- **Manutenibilit√†**: Modifiche globali senza toccare ogni risorsa
- **Scalabilit√†**: Architettura che cresce senza complessit√†

## Link e Documentazione
- [Analisi Violazioni Critiche](../laravel/Modules/Xot/docs/filament/critical-violations-analysis.md)
- [README Filament Best Practices](../laravel/Modules/Xot/docs/filament-best-practices.md)
- [README XotBaseResource](../laravel/Modules/Xot/docs/README.md)
- [NavigationLabelTrait](../laravel/Modules/Xot/docs/filament/traits/navigation-label-trait.md)
- [Translation System](../laravel/Modules/Xot/docs/translations-best-practices.md)

---
**Questa regola √® vincolante e va applicata in tutti i moduli che usano XotBaseResource. Le violazioni identificate devono essere corrette immediatamente.**
