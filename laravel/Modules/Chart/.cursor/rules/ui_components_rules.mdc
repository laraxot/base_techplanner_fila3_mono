---
description: Regole per i componenti Blade UI in Laraxot <nome progetto>
globs: ["**/views/components/**/*.blade.php"]
alwaysApply: true
---

# Regole per i Componenti Blade UI

## Posizionamento dei Componenti

### Regola Fondamentale
Tutti i componenti Blade UI condivisi (es. ui.logo) devono essere **SEMPRE** posizionati in `Modules/UI/resources/views/components/ui/` e **MAI** nella root `resources/views/components/`.

### ✅ CORRETTO
```
Modules/
└── UI/
    └── resources/
        └── views/
            └── components/
                └── ui/
                    ├── logo.blade.php
                    ├── button.blade.php
                    └── card.blade.php
```

### ❌ ERRATO
```
resources/
└── views/
    └── components/
        ├── ui/
        │   ├── logo.blade.php
        │   └── button.blade.php
        └── card.blade.php
```

## Motivazione
- Mantenere coerenza nella struttura del progetto
- Facilitare la manutenzione e l'aggiornamento dei componenti
- Garantire che tutti i componenti siano parte del modulo UI dedicato
- Prevenire duplicazioni e inconsistenze
- Migliorare la riusabilità dei componenti

## Inclusione dei Componenti

### ✅ CORRETTO
```blade
<x-ui::ui.logo />
<x-ui::ui.button>Salva</x-ui::ui.button>
<x-ui::ui.card>
    Contenuto della card
</x-ui::ui.card>
```

### ❌ ERRATO
```blade
<x-logo />
<x-ui.button>Salva</x-ui.button>
<x-card>
    Contenuto della card
</x-card>
```

## Organizzazione Interna

I componenti UI devono essere organizzati in sottocartelle logiche all'interno di `components/ui/`:

```
Modules/UI/resources/views/components/ui/
├── buttons/
│   ├── primary.blade.php
│   └── secondary.blade.php
├── cards/
│   ├── base.blade.php
│   └── collapsible.blade.php
├── forms/
│   ├── input.blade.php
│   └── select.blade.php
└── layout/
    ├── container.blade.php
    └── divider.blade.php
```

## Documentazione e Stile

### PHPDoc per Componenti
Ogni componente deve avere un blocco PHPDoc che descrive:
- Lo scopo del componente
- I parametri accettati
- Eventuali slot disponibili
- Esempi di utilizzo

```blade
{{--
/**
 * Button component.
 *
 * @param string $type Type of button (primary, secondary, danger)
 * @param bool $disabled Whether the button is disabled
 * @param string|null $id Optional ID for the button
 * @param string|null $class Additional classes
 *
 * @example
 * <x-ui::ui.button type="primary">
 *    Save changes
 * </x-ui::ui.button>
 */
--}}

<button
    {{ $attributes->merge([
        'type' => $type ?? 'button',
        'class' => 'btn btn-' . ($type ?? 'primary') . ($disabled ? ' disabled' : '') . ' ' . ($class ?? ''),
        'id' => $id ?? null,
        'disabled' => $disabled,
    ]) }}
>
    {{ $slot }}
</button>
```

## Modifiche e Aggiornamenti

Quando si modificano componenti UI esistenti:

1. Documentare la modifica in `Modules/UI/docs/components.md`
2. Aggiornare la documentazione root se necessario
3. Verificare compatibilità con l'utilizzo esistente
4. Testare in diversi contesti di utilizzo

## Checklist Componenti UI

- [ ] Posizionato in `Modules/UI/resources/views/components/ui/`
- [ ] Documentato con PHPDoc completo
- [ ] Organizzato nella sottocartella logica appropriata
- [ ] Testato in diversi contesti
- [ ] Documentazione aggiornata
- [ ] Nome e convenzioni coerenti con gli altri componenti

## Backlink e Riferimenti

- [Modules/UI/docs/PATHS_AND_ASSETS.md](mdc:../../laravel/Modules/UI/docs/PATHS_AND_ASSETS.md)
- [Modules/UI/docs/components.md](mdc:../../laravel/Modules/UI/docs/components.md)
- [Modules/Cms/docs/ui_components.md](mdc:../../laravel/Modules/Cms/docs/ui_components.md)
- [docs/UI_COMPONENTS.md](mdc:../../docs/UI_COMPONENTS.md)

*Ultimo aggiornamento: maggio 2025*
