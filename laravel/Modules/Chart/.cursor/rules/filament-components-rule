# Regole per i Componenti Filament

## Dropdown

### Struttura Corretta
```blade
<x-filament::dropdown>
    <x-slot name="trigger">
        <!-- Contenuto del trigger -->
    </x-slot>

    <x-filament::dropdown.list>
        <x-filament::dropdown.list.item
            icon="heroicon-m-user"
            :href="route('profile.show')"
        >
            {{ __('Profile') }}
        </x-filament::dropdown.list.item>

        <div class="border-t border-gray-200 dark:border-gray-700 my-1"></div>
    </x-filament::dropdown.list>
</x-filament::dropdown>
```

### Errori Comuni
- ❌ NON usare `x-filament::dropdown.item` - Non esiste
- ❌ NON usare `x-filament::dropdown.separator` - Non esiste
- ❌ NON usare `x-filament::dropdown.list.separator` - Non esiste

### Best Practices
- ✅ Usare `x-filament::dropdown.list.item` per gli elementi del menu
- ✅ Usare un div con bordo per i separatori
- ✅ Aggiungere icone usando l'attributo `icon`
- ✅ Usare `type="submit"` per i pulsanti di form invece di `onclick`
- ✅ Aggiungere la classe `w-full` al form per il logout

### Attributi Disponibili per dropdown.list.item
- `icon`: Heroicon da mostrare (es. "heroicon-m-user")
- `icon-color`: Colore dell'icona (danger, info, primary, success, warning)
- `color`: Colore dell'elemento (danger, info, primary, success, warning)
- `href`: URL per link
- `type`: "submit" per pulsanti di form
- `tag`: "a" per link, "button" per default

## Dropdown List Items
- ✅ Usare `x-filament::dropdown.list.item` per gli elementi del menu
- ✅ Aggiungere SEMPRE `tag="a"` quando l'elemento deve essere cliccabile
- ✅ Verificare che gli elementi siano effettivamente cliccabili
- ❌ Non omettere il tag quando si usa href

## Esempio Corretto
```blade
<x-filament::dropdown.list.item
    tag="a"
    :href="$item['url']"
    :active="request()->routeIs($item['route'])"
    class="cursor-pointer"
>
    {{ $item['label'] }}
</x-filament::dropdown.list.item>
```

## Esempio Errato
```blade
<x-filament::dropdown.list.item
    :href="$item['url']"
    :active="request()->routeIs($item['route'])"
    class="cursor-pointer"
>
    {{ $item['label'] }}
</x-filament::dropdown.list.item>
```

## Note
- Il tag è necessario per il corretto funzionamento dei link
- Senza il tag, gli elementi non saranno cliccabili
- Verificare sempre il comportamento dopo l'implementazione

# Regole per l'Uso dei Componenti Filament

## Componenti Icona
- ✅ SEMPRE usare `x-filament::icon` per le icone SVG
- ✅ SEMPRE usare `x-filament::icon-button` per i pulsanti con icone
- ❌ NON usare `x-dynamic-component` per le icone
- ❌ NON gestire manualmente il layout delle icone

## Vantaggi dei Componenti Filament
1. **Coerenza**: Mantengono lo stile del design system
2. **Tema Scuro**: Gestione automatica del tema scuro
3. **Accessibilità**: Componenti già ottimizzati
4. **Manutenibilità**: Codice più pulito e standardizzato

## Esempi di Utilizzo Corretto
```blade
{{-- Per icone semplici --}}
<x-filament::icon
    :icon="'ui-flags.' . $flagCode"
    class="h-5 w-5 text-gray-500 dark:text-gray-400"
    :label="$flagCode"
    aria-hidden="true"
/>

{{-- Per pulsanti con icone --}}
<x-filament::icon-button
    :icon="'ui-flags.' . $flagCode"
    class="h-5 w-5"
    :label="$flagCode"
    aria-hidden="true"
/>
```

## Errori Comuni da Evitare
1. ❌ Usare `x-dynamic-component` per le icone
2. ❌ Gestire manualmente il layout delle icone
3. ❌ Non utilizzare i componenti nativi di Filament
4. ❌ Ignorare il tema scuro

## Best Practices
1. **Componenti**:
   - Usare sempre i componenti nativi di Filament
   - Seguire le convenzioni di naming
   - Mantenere la coerenza del design

2. **Accessibilità**:
   - Aggiungere sempre label appropriate
   - Gestire correttamente gli attributi aria
   - Testare con screen reader

3. **Tema**:
   - Supportare sempre il tema scuro
   - Usare le classi di colore appropriate
   - Mantenere il contrasto

4. **Manutenzione**:
   - Documentare l'uso dei componenti
   - Aggiornare le dipendenze
   - Testare le modifiche
