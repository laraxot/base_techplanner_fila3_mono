# Regole per la Traduzione delle Validazioni

## Struttura dei File

### File di Traduzione

`lang/it/validation.php`
```php
return [
    'accepted' => 'Il campo :attribute deve essere accettato.',
    'active_url' => 'Il campo :attribute non è un URL valido.',
    // ...
    'custom' => [
        'attribute-name' => [
            'rule-name' => 'custom-message',
        ],
    ],
    'attributes' => [
        'name' => 'nome',
        'email' => 'indirizzo email',
    ],
];
```

## Convenzioni di Codice

### Nomi degli Attributi
- Usa nomi descrittivi in minuscolo
- Mantieni la coerenza tra i vari form
- Usa le traduzioni per supportare più lingue

### Esempi di Attributi

```php
// Buono
'email' => 'indirizzo email',
'postal_code' => 'codice postale',
'phone_number' => 'numero di telefono',

// Da evitare
'email' => 'Email',
'p_code' => 'Codice Postale',
'phone' => 'Tel.',
```

## Best Practice

### 1. Utilizzo di BaseFormRequest

Crea una classe base per le richieste per condividere la logica comune:

`app/Http/Requests/BaseFormRequest.php`
```php
abstract class BaseFormRequest extends FormRequest
{
    public function attributes()
    {
        return [
            'email' => __('auth.fields.email'),
            'password' => __('auth.fields.password'),
        ];
    }
    
    public function messages()
    {
        return [
            'required' => 'Il campo :attribute è obbligatorio.',
            'email' => 'Inserisci un indirizzo email valido.',
        ];
    }
}
```

### 2. Validazione di Campi Array

Per i campi array, utilizza la notazione con asterischi:

```php
public function attributes()
{
    return [
        'products.*.name' => 'nome prodotto',
        'products.*.quantity' => 'quantità',
    ];
}

public function messages()
{
    return [
        'products.*.name.required' => 'Il nome del prodotto :position è obbligatorio.',
        'products.*.quantity.integer' => 'La quantità deve essere un numero intero.',
    ];
}
```

### 3. Messaggi Personalizzati

Utilizza messaggi personalizzati per una migliore esperienza utente:

```php
public function messages()
{
    return [
        'email.required' => 'È necessario specificare un :attribute.',
        'email.email' => 'L\':attribute non è valido.',
        'password.required' => 'La :attribute è obbligatoria.',
        'password.min' => 'La :attribute deve essere di almeno :min caratteri.',
    ];
}
```

## Validazione

### Regole per i Messaggi
- Usa un linguaggio chiaro e conciso
- Mantieni la coerenza nel tono e nello stile
- Fornisci indicazioni utili per la correzione

### Esempi
```php
// Buono
'email.required' => 'Inserisci il tuo indirizzo email.',
'password.min' => 'La password deve essere lunga almeno :min caratteri.',

// Da evitare
'email.required' => 'Errore campo email',
'password.min' => 'Password troppo corta',
```

## Automazione

### Comandi Artisan Utili

```bash
# Pulisci la cache delle viste
php artisan view:clear

# Pulisci la cache della configurazione
php artisan config:clear

# Pulisci la cache dell'applicazione
php artisan cache:clear
```

### Strumenti di Sviluppo

1. **Laravel Debugbar**
   - Visualizza le query eseguite
   - Mostra i messaggi di validazione
   - Utile per il debug delle traduzioni

2. **Laravel Telescope**
   - Monitora le richieste HTTP
   - Traccia le eccezioni
   - Utile per il debug in ambiente di sviluppo

## Test

### Test delle Validazioni

`tests/Feature/ExampleTest.php`
```php
public function test_validation_rules()
{
    $response = $this->post('/register', [
        'name' => '',
        'email' => 'invalid-email',
        'password' => '123',
    ]);

    $response->assertSessionHasErrors([
        'name' => 'Il campo nome è obbligatorio.',
        'email' => 'Inserisci un indirizzo email valido.',
        'password' => 'La password deve essere di almeno 8 caratteri.',
    ]);
}
```

### Test delle Traduzioni

`tests/Unit/LocaleTest.php`
```php
public function test_italian_translations_exist()
{
    $this->app->setLocale('it');
    
    $this->assertEquals(
        'Il campo nome è obbligatorio.',
        __('validation.required', ['attribute' => 'nome'])
    );
}
```

## Risoluzione dei Problemi

### 1. Traduzioni Mancanti

Verifica che le chiavi di traduzione esistano nei file di lingua:

```bash
grep -r "validation.required" lang/
```

### 2. Problemi con i Nomi degli Attributi

Assicurati che i nomi degli attributi siano corretti e coerenti:

```bash
grep -r "attributes'\s*=>" app/Http/Requests/
```

### 3. Cache delle Viste

Se le modifiche non vengono visualizzate, prova a pulire la cache:

```bash
php artisan view:clear
php artisan config:clear
php artisan cache:clear
```

## Conclusione

Seguire queste linee guida garantirà una gestione coerente ed efficace delle traduzioni delle validazioni nel progetto, migliorando l'esperienza utente e la manutenibilità del codice.
