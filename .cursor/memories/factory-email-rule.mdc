# Memoria Permanente: Email nelle Factory

## ⚠️ REGOLA CRITICA E SACRA ⚠️
**MAI utilizzare email fittizie come "@example.com" nelle factory**

## Cosa NON Fare (ASSOLUTAMENTE VIETATO)
```php
// ❌ MAI FARE QUESTO
'email' => 'patient+'.uniqid('', true).'@example.com',
'email' => 'user@example.com',
'email' => 'test@test.com',
'email' => 'admin@admin.com',
```

## Cosa Fare SEMPRE (OBBLIGATORIO)
```php
// ✅ SEMPRE FARE QUESTO
'email' => $this->faker->unique()->safeEmail(),
'email' => $this->faker->unique()->email(),
'email' => $this->faker->unique()->freeEmail(),
```

## Motivazione
- **Realismo**: I faker generano email realistiche e valide
- **Unicità**: `unique()` garantisce email non duplicate
- **Professionalità**: Codice di produzione, non di test amatoriale
- **Qualità**: Standard elevato per tutto il progetto

## Pattern Corretto
```php
public function definition(): array
{
    return [
        'name' => $this->faker->firstName(),
        'last_name' => $this->faker->lastName(),
        'email' => $this->faker->unique()->safeEmail(), // ✅ SEMPRE così
        'phone' => $this->faker->phoneNumber(),
    ];
}
```

## Checklist Obbligatoria
- [ ] Ho rimosso tutte le email "@example.com"?
- [ ] Ho usato sempre i faker appropriati?
- [ ] Ho verificato che le email siano uniche con `unique()`?

**⚠️ QUESTA REGOLA È SACRA E NON PUÒ ESSERE VIOLATA ⚠️**

Ultimo aggiornamento: 2025-06-04
description:
globs:
alwaysApply: false
---
