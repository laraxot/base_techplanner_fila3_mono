# Memoria Critica: Focus sulla Logica di Business

## REGOLA ASSOLUTA
**CONCENTRARSI SEMPRE SULLA LOGICA DI BUSINESS, NON SUI DETTAGLI IMPLEMENTATIVI!**

## REGOLA IMPORTANTISSIMA DA RICORDARE SEMPRE
Questa è una regola fondamentale che devo applicare in ogni aspetto del lavoro:

### Principi Fondamentali
- **Logica di Business** = Comportamenti, regole aziendali, valore per l'utente
- **Dettagli Implementativi** = Configurazioni framework, proprietà tecniche
- **Focus** = Sempre sulla logica di business
- **Evitare** = Perdere tempo sui dettagli implementativi

### Esempi Pratici
```php
// ✅ LOGICA DI BUSINESS - SEMPRE TESTARE
test('appointment cannot be cancelled after completion', function () {
    $appointment = Appointment::factory()->completed()->create();
    expect($appointment->canBeCancelled())->toBeFalse();
});

// ❌ DETTAGLI IMPLEMENTATIVI - MAI TESTARE
test('appointment has correct fillable fields', function () {
    expect($appointment->getFillable())->toContain('patient_id');
}); // STUPIDO!
```

### Workflow
1. **Identificare** la logica di business
2. **Ignorare** i dettagli implementativi  
3. **Concentrarsi** sui comportamenti
4. **Validare** il valore per l'utente

### Motivazione
- La logica di business è il cuore del software
- I dettagli implementativi sono responsabilità del framework
- Test di logica di business sono più stabili e significativi
- ROI maggiore testando comportamenti invece di configurazioni

### Ambiti di Applicazione
- Testing (comportamenti vs configurazioni)
- Sviluppo (logiche di dominio vs CRUD)
- Architettura (separazione logica/tecnico)
- Code Review (valore vs correttezza tecnica)

**RICORDA SEMPRE**: La logica di business è ciò che crea valore, i dettagli implementativi sono solo il mezzo!
