# MEMORIA CRITICA: PREVENZIONE ERRORI COMUNI

## ERRORI CRITICI DA EVITARE SEMPRE

### 1. MAI USARE ->label() NEI COMPONENTI FILAMENT
```php
// ❌ ERRORE CRITICO - MAI FARE QUESTO
TextColumn::make('name')->label('Nome')

// ✅ CORRETTO - SEMPRE FARE QUESTO
TextColumn::make('name')  // Traduzione automatica
```

### 2. MAI USARE VALORI HARDCODED NEI TEST
```php
// ❌ ERRORE CRITICO - MAI FARE QUESTO
$this->assertEquals('primary', $listColor);

// ✅ CORRETTO - SEMPRE FARE QUESTO
$this->assertIsString($listColor);
$this->assertNotEmpty($listColor);
```

### 3. MAI USARE __() O trans() DIRETTAMENTE NEGLI ENUM
```php
// ❌ ERRORE CRITICO - MAI FARE QUESTO
return __('ui::table-layout.'.$this->value.'.label');

// ✅ CORRETTO - SEMPRE FARE QUESTO
return $this->transClass(self::class, $this->value.'.label');
```

### 4. SEMPRE STRUTTURA ESPANSA NEI FILE DI TRADUZIONE
```php
// ❌ ERRORE CRITICO - MAI FARE QUESTO
'list' => 'Lista',

// ✅ CORRETTO - SEMPRE FARE QUESTO
'list' => [
    'label' => 'Lista',
    'color' => 'primary',
    'icon' => 'heroicon-o-list-bullet',
],
```

### 5. SEMPRE USARE TRANS_TRAIT NEGLI ENUM
```php
// ❌ ERRORE CRITICO - MAI FARE QUESTO
enum MyEnum: string implements HasColor, HasIcon, HasLabel
{
    // Manca use TransTrait;
}

// ✅ CORRETTO - SEMPRE FARE QUESTO
enum MyEnum: string implements HasColor, HasIcon, HasLabel
{
    use TransTrait;
}
```

## RICORDA SEMPRE

1. **MAI** `->label('testo')`
2. **MAI** valori hardcoded nei test
3. **MAI** `__()` o `trans()` negli enum
4. **SEMPRE** struttura espansa nelle traduzioni
5. **SEMPRE** `use TransTrait;` negli enum
6. **SEMPRE** `transClass()` per traduzioni enum

## ULTIMO AGGIORNAMENTO
2025-01-27 - Memoria critica per prevenzione errori comuni
description:
globs:
alwaysApply: false
---
